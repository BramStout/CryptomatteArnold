import uigen

ui.shader({
   'name': 'cryptomatte',
   'intro': '',
   'description': 'Cryptomatte AOV Shader',
   'output': 'rgb',
   'maya_name': 'cryptomatte',
   'maya_classification': 'utility/aov',
   'maya_id':'0x00116422',
   'aov_shader': True,
   'maya_swatch': False,
   'maya_matte': False,
   'maya_bump': False,
   'c4d_classification': 'texture',
   'c4d_menu': 'texture',
   'soft_name': 'Cryptomatte',
   'soft_classification': 'texture',
   'soft_version': 1,
   'help_url': 'http://www.anderslanglands.com/alshaders/cryptomatte.html',
   'houdini_icon':'VOP_shadinglayer',
   'houdini_category':'AOV'
})

with uigen.group(ui, 'Cryptomatte Globals', collapse=False):
   ui.parameter('sidecar_manifests', 'bool', False, label='Sidecar Manifests', 
      description='Sets whether Cryptomatte should write the manifest to a sidecar .json file instead of the EXR header.')
   ui.parameter('cryptomatte_depth', 'int', 6, label='Cryptomatte Depth', 
      description='Set the cryptomatte depth (number of cryptomatte AOVs)')
   ui.parameter('strip_obj_namespaces', 'bool', True, label='Strip Object Namespaces', 
      description='Strip namespaces from object names')
   ui.parameter('strip_mat_namespaces', 'bool', True, label='Strip Material Namespaces', 
      description='Strip namespaces from material names')

with uigen.group(ui, 'Standard Cryptomatte AOVs', collapse=False):
   ui.aov('aov_crypto_asset', 'rgb', label='Asset AOV name', 
      description='Set the name of the cryptomatte asset AOV')
   ui.aov('aov_crypto_object', 'rgb', label='Object AOV name', 
      description='Set the name of the cryptomatte object AOV')
   ui.aov('aov_crypto_material', 'rgb', label='Material AOV name', 
      description='Set the name of the cryptomatte material AOV')

with uigen.group(ui, 'User Defined Cryptomattes', collapse=True):
   with uigen.group(ui, 'User Cryptomatte 0', collapse=False ):
      ui.parameter('user_crypto_aov_0', 'string', '', label='AOV name', 
         description='AOV name for user Cryptomatte 0')
      ui.parameter('user_crypto_src_0', 'string', '', label='Source User Data', 
         description='Source user data name for user Cryptomatte 0')
   with uigen.group(ui, 'User Cryptomatte 1', collapse=False ):
      ui.parameter('user_crypto_aov_1', 'string', '', label='AOV name', 
         description='AOV name for user Cryptomatte 1')
      ui.parameter('user_crypto_src_1', 'string', '', label='Source User Data', 
         description='Source user data name for user Cryptomatte 1')
   with uigen.group(ui, 'User Cryptomatte 2', collapse=False ):
      ui.parameter('user_crypto_aov_2', 'string', '', label='AOV name', 
         description='AOV name for user Cryptomatte 2')
      ui.parameter('user_crypto_src_2', 'string', '', label='Source User Data', 
         description='Source user data name for user Cryptomatte 2')
   with uigen.group(ui, 'User Cryptomatte 3', collapse=False ):
      ui.parameter('user_crypto_aov_3', 'string', '', label='AOV name', 
         description='AOV name for user Cryptomatte 3')
      ui.parameter('user_crypto_src_3', 'string', '', label='Source User Data', 
         description='Source user data name for user Cryptomatte 3')
